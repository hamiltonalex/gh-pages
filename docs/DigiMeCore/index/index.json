{"interfaceLanguages":{"occ":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/digimecore\/digimecore","title":"DigiMeCore","type":"article"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/digimecore\/digimecoreversionnumber","title":"DigiMeCoreVersionNumber","type":"var"},{"path":"\/documentation\/digimecore\/digimecoreversionstring","title":"DigiMeCoreVersionString","type":"var"}],"path":"\/documentation\/digimecore","title":"DigiMeCore","type":"module"}],"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/digimecore\/digimecore","title":"DigiMeCore","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/consentaccesstimerange\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimecore\/consentaccesstimerange\/init(type:description:from:to:)","title":"init(type: ContractTimeRangeType, description: String?, from: Date?, to: Date?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/consentaccesstimerange\/defaultlimits()","title":"func defaultLimits() -> TimeRangeLimits","type":"method"},{"path":"\/documentation\/digimecore\/consentaccesstimerange\/verifytimerange(readoptions:)","title":"func verifyTimeRange(readOptions: ReadOptions?) -> TimeRangeLimits","type":"method"},{"path":"\/documentation\/digimecore\/consentaccesstimerange\/verifytimerange(startdate:enddate:)","title":"func verifyTimeRange(startDate: Date, endDate: Date) -> TimeRangeLimits","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/consentaccesstimerange\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/consentaccesstimerange\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/consentaccesstimerange\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/consentaccesstimerange\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/consentaccesstimerange\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/consentaccesstimerange","title":"ConsentAccessTimeRange","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/discoveryresource\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/discoveryresource\/aspectratio","title":"var aspectRatio: CGFloat","type":"property"},{"path":"\/documentation\/digimecore\/discoveryresource\/height","title":"var height: CGFloat?","type":"property"},{"path":"\/documentation\/digimecore\/discoveryresource\/mimetype","title":"var mimeType: String","type":"property"},{"path":"\/documentation\/digimecore\/discoveryresource\/resizestrategy","title":"var resizeStrategy: String","type":"property"},{"path":"\/documentation\/digimecore\/discoveryresource\/type","title":"var type: Int","type":"property"},{"path":"\/documentation\/digimecore\/discoveryresource\/url","title":"var url: URL","type":"property"},{"path":"\/documentation\/digimecore\/discoveryresource\/width","title":"var width: CGFloat?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/discoveryresource\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/discoveryresource\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/discoveryresource\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/discoveryresource\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/discoveryresource\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/discoveryresource","title":"DiscoveryResource","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/filepersistentstorage\/init(with:)","title":"init(with: FileManager.SearchPathDirectory)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/filepersistentstorage\/appendtofile(data:filename:)","title":"func appendToFile(data: Data, fileName: String)","type":"method"},{"path":"\/documentation\/digimecore\/filepersistentstorage\/datapersist(for:)","title":"func dataPersist(for: String) -> Bool","type":"method"},{"path":"\/documentation\/digimecore\/filepersistentstorage\/loaddata(for:)","title":"func loadData(for: String) -> Data?","type":"method"},{"path":"\/documentation\/digimecore\/filepersistentstorage\/loadobject(type:filename:)","title":"func loadObject<T>(type: T.Type, fileName: String) -> T?","type":"method"},{"path":"\/documentation\/digimecore\/filepersistentstorage\/reset(filename:)","title":"func reset(fileName: String)","type":"method"},{"path":"\/documentation\/digimecore\/filepersistentstorage\/store(data:filename:completion:)","title":"func store(data: Data, fileName: String, completion: ((URL?) -> Void)?)","type":"method"},{"path":"\/documentation\/digimecore\/filepersistentstorage\/store(file:)","title":"func store(file: File)","type":"method"},{"path":"\/documentation\/digimecore\/filepersistentstorage\/store(object:filename:)","title":"func store<T>(object: T, fileName: String)","type":"method"},{"path":"\/documentation\/digimecore\/filepersistentstorage\/store(object:filename:options:)","title":"func store(object: Any, fileName: String, options: JSONSerialization.WritingOptions)","type":"method"}],"path":"\/documentation\/digimecore\/filepersistentstorage","title":"FilePersistentStorage","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/logger\/loglevels","title":"class var logLevels: LogLevelMask","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/logger\/critical(_:file:function:line:metadata:)","title":"class func critical(String, file: String, function: String, line: UInt, metadata: Any?)","type":"method"},{"path":"\/documentation\/digimecore\/logger\/debug(_:file:function:line:metadata:)","title":"class func debug(String, file: String, function: String, line: UInt, metadata: Any?)","type":"method"},{"path":"\/documentation\/digimecore\/logger\/error(_:file:function:line:metadata:)","title":"class func error(String, file: String, function: String, line: UInt, metadata: Any?)","type":"method"},{"path":"\/documentation\/digimecore\/logger\/info(_:file:function:line:metadata:)","title":"class func info(String, file: String, function: String, line: UInt, metadata: Any?)","type":"method"},{"path":"\/documentation\/digimecore\/logger\/mixpanel(_:file:function:line:metadata:)","title":"class func mixpanel(String, file: String, function: String, line: UInt, metadata: Any)","type":"method"},{"path":"\/documentation\/digimecore\/logger\/setloghandler(_:)","title":"class func setLogHandler(LogHandler)","type":"method"},{"path":"\/documentation\/digimecore\/logger\/warning(_:file:function:line:metadata:)","title":"class func warning(String, file: String, function: String, line: UInt, metadata: Any?)","type":"method"}],"path":"\/documentation\/digimecore\/logger","title":"Logger","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/rawfilemetadatabuilder\/init(mimetype:accounts:)","title":"init(mimeType: MimeType, accounts: [String])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/rawfilemetadatabuilder\/appid(_:)","title":"func appId(String) -> RawFileMetadataBuilder","type":"method"},{"path":"\/documentation\/digimecore\/rawfilemetadatabuilder\/build()","title":"func build() -> RawFileMetadata","type":"method"},{"path":"\/documentation\/digimecore\/rawfilemetadatabuilder\/contractid(_:)","title":"func contractId(String) -> RawFileMetadataBuilder","type":"method"},{"path":"\/documentation\/digimecore\/rawfilemetadatabuilder\/objecttypes(_:)","title":"func objectTypes([RawFileMetadata.ObjectType]) -> RawFileMetadataBuilder","type":"method"},{"path":"\/documentation\/digimecore\/rawfilemetadatabuilder\/providername(_:)","title":"func providerName(String) -> RawFileMetadataBuilder","type":"method"},{"path":"\/documentation\/digimecore\/rawfilemetadatabuilder\/reference(_:)","title":"func reference([String]) -> RawFileMetadataBuilder","type":"method"},{"path":"\/documentation\/digimecore\/rawfilemetadatabuilder\/servicegroups(_:)","title":"func serviceGroups([Int]) -> RawFileMetadataBuilder","type":"method"},{"path":"\/documentation\/digimecore\/rawfilemetadatabuilder\/tags(_:)","title":"func tags([String]) -> RawFileMetadataBuilder","type":"method"}],"path":"\/documentation\/digimecore\/rawfilemetadatabuilder","title":"RawFileMetadataBuilder","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/accountdataprovider\/metadata","title":"var metadata: LogEventMeta","type":"property"},{"path":"\/documentation\/digimecore\/accountdataprovider\/sourceaccount","title":"var sourceAccount: SourceAccount","type":"property"},{"path":"\/documentation\/digimecore\/accountdataprovider\/sourceaccountdata","title":"var sourceAccountData: SourceAccountData","type":"property"}],"path":"\/documentation\/digimecore\/accountdataprovider","title":"AccountDataProvider","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dated\/enddate","title":"var endDate: Date","type":"property"}],"path":"\/documentation\/digimecore\/dated","title":"Dated","type":"protocol"},{"path":"\/documentation\/digimecore\/userdefaultstorable","title":"UserDefaultStorable","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/aes256\/init(key:iv:)","title":"init(key: Data, iv: Data) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/aes256\/decrypt(_:)","title":"func decrypt(Data) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/aes256\/encrypt(_:)","title":"func encrypt(Data) throws -> Data","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/aes256\/generateinitializationvector()","title":"static func generateInitializationVector() -> Data","type":"method"},{"path":"\/documentation\/digimecore\/aes256\/generatesymmetrickey()","title":"static func generateSymmetricKey() -> Data","type":"method"}],"path":"\/documentation\/digimecore\/aes256","title":"AES256","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/apierror\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/apierror\/code","title":"let code: String","type":"property"},{"path":"\/documentation\/digimecore\/apierror\/message","title":"let message: String","type":"property"},{"path":"\/documentation\/digimecore\/apierror\/reference","title":"let reference: String?","type":"property"}],"path":"\/documentation\/digimecore\/apierror","title":"APIError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/accountservicedescriptor\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimecore\/accountservicedescriptor\/init(name:logo:)","title":"init(name: String, logo: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/accountservicedescriptor\/logo","title":"let logo: String?","type":"property"},{"path":"\/documentation\/digimecore\/accountservicedescriptor\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/accountservicedescriptor\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/accountservicedescriptor\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/accountservicedescriptor\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/accountservicedescriptor\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/accountservicedescriptor\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/accountservicedescriptor","title":"AccountServiceDescriptor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/accountsinfo\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/accountsinfo\/accounts","title":"let accounts: [SourceAccount]","type":"property"},{"path":"\/documentation\/digimecore\/accountsinfo\/consentid","title":"let consentId: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/accountsinfo\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/accountsinfo\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/accountsinfo\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/accountsinfo\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/accountsinfo\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/accountsinfo","title":"AccountsInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/agent\/init(name:version:)","title":"init(name: String, version: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/agent\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/digimecore\/agent\/version","title":"let version: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/agent\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/agent\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/agent\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/agent\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/agent\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/agent","title":"Agent","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/application\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/application\/environment","title":"let environment: Int?","type":"property"},{"path":"\/documentation\/digimecore\/application\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/digimecore\/application\/partnerid","title":"let partnerId: String?","type":"property"},{"path":"\/documentation\/digimecore\/application\/resources","title":"let resources: Resources?","type":"property"},{"path":"\/documentation\/digimecore\/application\/revision","title":"let revision: Int?","type":"property"},{"path":"\/documentation\/digimecore\/application\/schemaversion","title":"let schemaVersion: String?","type":"property"},{"path":"\/documentation\/digimecore\/application\/status","title":"let status: Int?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/application\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/application\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/application\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/application\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/application\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/application","title":"Application","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/codableuserdefault\/init(key:userdefaults:)","title":"init<U>(key: U, userDefaults: UserDefaults)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/codableuserdefault\/wrappedvalue","title":"var wrappedValue: T?","type":"property"}],"path":"\/documentation\/digimecore\/codableuserdefault","title":"CodableUserDefault","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/configuration\/init(appid:contractid:privatekey:authusingexternalbrowser:baseurl:)","title":"init(appId: String, contractId: String, privateKey: String, authUsingExternalBrowser: Bool, baseUrl: String?) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/configuration\/appid","title":"let appId: String","type":"property"},{"path":"\/documentation\/digimecore\/configuration\/authusingexternalbrowser","title":"let authUsingExternalBrowser: Bool","type":"property"},{"path":"\/documentation\/digimecore\/configuration\/baseurl","title":"let baseUrl: String?","type":"property"},{"path":"\/documentation\/digimecore\/configuration\/contractid","title":"let contractId: String","type":"property"},{"path":"\/documentation\/digimecore\/configuration\/privatekeydata","title":"let privateKeyData: Data","type":"property"}],"path":"\/documentation\/digimecore\/configuration","title":"Configuration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/consentpolicy\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/consentpolicy\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/digimecore\/consentpolicy\/sharetype","title":"let shareType: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/consentpolicy\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/consentpolicy\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/consentpolicy\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/consentpolicy\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/consentpolicy\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/consentpolicy","title":"ConsentPolicy","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contractmetadata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contractmetadata\/oauth","title":"let oAuth: OAuth?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contractmetadata\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/contractmetadata\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contractmetadata\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/contractmetadata\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/contractmetadata\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/contractmetadata","title":"ContractMetadata","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contractresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contractresponse\/certificate","title":"let certificate: String","type":"property"},{"path":"\/documentation\/digimecore\/contractresponse\/type","title":"let type: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contractresponse\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/contractresponse\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contractresponse\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/contractresponse\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/contractresponse\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/contractresponse","title":"ContractResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contractversion5\/init(_:)","title":"init?([AnyHashable : Any])","type":"init"},{"path":"\/documentation\/digimecore\/contractversion5\/init(data:)","title":"init?(data: Data)","type":"init"},{"path":"\/documentation\/digimecore\/contractversion5\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contractversion5\/color","title":"let color: String?","type":"property"},{"path":"\/documentation\/digimecore\/contractversion5\/datapush","title":"let dataPush: DataPush?","type":"property"},{"path":"\/documentation\/digimecore\/contractversion5\/datarequest","title":"let dataRequest: DataRequest?","type":"property"},{"path":"\/documentation\/digimecore\/contractversion5\/metadata","title":"let metadata: ContractMetadata?","type":"property"},{"path":"\/documentation\/digimecore\/contractversion5\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/digimecore\/contractversion5\/policies","title":"let policies: Policies?","type":"property"},{"path":"\/documentation\/digimecore\/contractversion5\/resources","title":"let resources: Resources?","type":"property"},{"path":"\/documentation\/digimecore\/contractversion5\/revision","title":"let revision: String?","type":"property"},{"path":"\/documentation\/digimecore\/contractversion5\/schemaversion","title":"let schemaVersion: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contractversion5\/verifytimerange(readoptions:)","title":"func verifyTimeRange(readOptions: ReadOptions?) -> Result<TimeRangeLimits, SDKError>","type":"method"},{"path":"\/documentation\/digimecore\/contractversion5\/verifytimerange(startdate:enddate:)","title":"func verifyTimeRange(startDate: Date, endDate: Date) -> TimeRangeLimits","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contractversion5\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/contractversion5\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contractversion5\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/contractversion5\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/contractversion5\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/contractversion5","title":"ContractVersion5","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/credentials\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimecore\/credentials\/init(token:writeaccessinfo:accountreference:)","title":"init(token: OAuthToken, writeAccessInfo: WriteAccessInfo?, accountReference: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/credentials\/accountreference","title":"let accountReference: String?","type":"property"},{"path":"\/documentation\/digimecore\/credentials\/token","title":"let token: OAuthToken","type":"property"},{"path":"\/documentation\/digimecore\/credentials\/writeaccessinfo","title":"let writeAccessInfo: WriteAccessInfo?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/credentials\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/credentials\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/credentials\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/credentials\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/credentials\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/credentials","title":"Credentials","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/criteria\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/criteria\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/criteria\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/criteria\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/criteria\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/criteria\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/criteria","title":"Criteria","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dataimporter\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dataimporter\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/digimecore\/dataimporter\/resources","title":"let resources: Resources?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dataimporter\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/dataimporter\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dataimporter\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/dataimporter\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/dataimporter\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/dataimporter","title":"DataImporter","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/datapush\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/datapush\/callbackurl","title":"let callbackUrl: String?","type":"property"},{"path":"\/documentation\/digimecore\/datapush\/consentpolicy","title":"let consentPolicy: String?","type":"property"},{"path":"\/documentation\/digimecore\/datapush\/content","title":"let content: [String]?","type":"property"},{"path":"\/documentation\/digimecore\/datapush\/disclamer","title":"let disclamer: String?","type":"property"},{"path":"\/documentation\/digimecore\/datapush\/frequency","title":"let frequency: String?","type":"property"},{"path":"\/documentation\/digimecore\/datapush\/mappedservice","title":"let mappedService: String?","type":"property"},{"path":"\/documentation\/digimecore\/datapush\/purpose","title":"let purpose: String?","type":"property"},{"path":"\/documentation\/digimecore\/datapush\/type","title":"let type: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/datapush\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/datapush\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/datapush\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/datapush\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/datapush\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/datapush","title":"DataPush","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/datarequest\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/datarequest\/consentpolicy","title":"let consentPolicy: ConsentPolicy?","type":"property"},{"path":"\/documentation\/digimecore\/datarequest\/criteria","title":"let criteria: Criteria?","type":"property"},{"path":"\/documentation\/digimecore\/datarequest\/dataimporter","title":"let dataImporter: DataImporter?","type":"property"},{"path":"\/documentation\/digimecore\/datarequest\/dataretention","title":"let dataRetention: DataRetentionPolicy?","type":"property"},{"path":"\/documentation\/digimecore\/datarequest\/datatransportpolicy","title":"let dataTransportPolicy: DataTransportPolicy?","type":"property"},{"path":"\/documentation\/digimecore\/datarequest\/disclaimer","title":"let disclaimer: String?","type":"property"},{"path":"\/documentation\/digimecore\/datarequest\/externalsharepolicy","title":"let externalSharePolicy: ExternalSharePolicy?","type":"property"},{"path":"\/documentation\/digimecore\/datarequest\/gdpr","title":"let gdpr: GDPR?","type":"property"},{"path":"\/documentation\/digimecore\/datarequest\/purpose","title":"let purpose: String?","type":"property"},{"path":"\/documentation\/digimecore\/datarequest\/servicegroups","title":"let serviceGroups: [ServiceGroupCodable]?","type":"property"},{"path":"\/documentation\/digimecore\/datarequest\/timeranges","title":"let timeRanges: [ConsentAccessTimeRange]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/datarequest\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/datarequest\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/datarequest\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/datarequest\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/datarequest\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/datarequest","title":"DataRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dataretentionpolicy\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dataretentionpolicy\/dataretained","title":"let dataRetained: Bool?","type":"property"},{"path":"\/documentation\/digimecore\/dataretentionpolicy\/description","title":"let description: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dataretentionpolicy\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/dataretentionpolicy\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dataretentionpolicy\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/dataretentionpolicy\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/dataretentionpolicy\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/dataretentionpolicy","title":"DataRetentionPolicy","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/datatransportpolicy\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/datatransportpolicy\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/digimecore\/datatransportpolicy\/leavesdevice","title":"let leavesDevice: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/datatransportpolicy\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/datatransportpolicy\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/datatransportpolicy\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/datatransportpolicy\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/datatransportpolicy\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/datatransportpolicy","title":"DataTransportPolicy","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/deliverymode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/deliverymode\/redirecturi","title":"let redirectUri: String?","type":"property"},{"path":"\/documentation\/digimecore\/deliverymode\/type","title":"let type: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/deliverymode\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/deliverymode\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/deliverymode\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/deliverymode\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/deliverymode\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/deliverymode","title":"DeliveryMode","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/duration\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/duration\/sourcefetch","title":"let sourceFetch: Int","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/duration\/unlimited()","title":"static func unlimited() -> Duration","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/duration\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/duration\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/duration\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/duration\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/duration\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/duration\/init(integerliteral:)","title":"init(integerLiteral: Int)","type":"init"}],"path":"\/documentation\/digimecore\/duration\/expressiblebyintegerliteral-implementations","title":"ExpressibleByIntegerLiteral Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/duration","title":"Duration","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/dynamiccodingkey\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/dynamiccodingkey\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/dynamiccodingkey\/intvalue","title":"var intValue: Int?","type":"property"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/dynamiccodingkey\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/dynamiccodingkey\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/dynamiccodingkey\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/dynamiccodingkey\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/dynamiccodingkey","title":"DynamicallyKeyedArray.DynamicCodingKey","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/arraytype","title":"DynamicallyKeyedArray.ArrayType","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/startindex","title":"var startIndex: Index","type":"property"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/contains(_:)-abop","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/index(after:)","title":"func index(after: Index) -> Index","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/map(_:)-6mbl4","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/split(separator:maxsplits:omittingemptysubsequences:)-1ug8m","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/split(separator:maxsplits:omittingemptysubsequences:)-48oeb","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/subscript(_:)","title":"subscript(Index) -> Iterator.Element","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/index","title":"DynamicallyKeyedArray.Index","type":"typealias"}],"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/contains(_:)-6reuz","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/flatmap(_:)-36gfq","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/flatmap(_:)-976yf","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/joined(separator:)-3y1lq","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/joined(separator:)-6xwn4","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/map(_:)-x2gq","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/sorted(using:)-7rxqo","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/sorted(using:)-9voph","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/split(separator:maxsplits:omittingemptysubsequences:)-8tn14","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/element","title":"DynamicallyKeyedArray.Element","type":"typealias"}],"path":"\/documentation\/digimecore\/dynamicallykeyedarray\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/dynamicallykeyedarray","title":"DynamicallyKeyedArray","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/externalsharepolicy\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/externalsharepolicy\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/digimecore\/externalsharepolicy\/sharedexternally","title":"let sharedExternally: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/externalsharepolicy\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/externalsharepolicy\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/externalsharepolicy\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/externalsharepolicy\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/externalsharepolicy\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/externalsharepolicy","title":"ExternalSharePolicy","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/file\/init(filewithid:rawdata:metadata:updated:)","title":"init(fileWithId: String, rawData: Data, metadata: FileMetadata, updated: Date)","type":"init"},{"path":"\/documentation\/digimecore\/file\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/file\/data","title":"let data: Data","type":"property"},{"path":"\/documentation\/digimecore\/file\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimecore\/file\/metadata","title":"let metadata: FileMetadata","type":"property"},{"path":"\/documentation\/digimecore\/file\/mimetype","title":"var mimeType: MimeType","type":"property"},{"path":"\/documentation\/digimecore\/file\/updateddate","title":"let updatedDate: Date","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/file\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/digimecore\/file\/tojson(persistresult:)","title":"func toJSON(persistResult: Bool) -> Any?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/file\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/file\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/file\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/file\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/file\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/file","title":"File","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/filelist\/init(files:status:)","title":"init(files: [FileListItem]?, status: SyncStatus)","type":"init"},{"path":"\/documentation\/digimecore\/filelist\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/filelist\/files","title":"let files: [FileListItem]?","type":"property"},{"path":"\/documentation\/digimecore\/filelist\/status","title":"let status: SyncStatus","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/filelist\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/filelist\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/filelist","title":"FileList","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/filelistitem\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimecore\/filelistitem\/init(name:objectversion:updateddate:)","title":"init(name: String, objectVersion: String?, updatedDate: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/filelistitem\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/digimecore\/filelistitem\/objectversion","title":"let objectVersion: String?","type":"property"},{"path":"\/documentation\/digimecore\/filelistitem\/updateddate","title":"let updatedDate: Date","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/filelistitem\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/filelistitem\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/filelistitem","title":"FileListItem","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/distances-swift.struct\/init(activity:distance:)","title":"init(activity: String, distance: Double)","type":"init"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/distances-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/distances-swift.struct\/activity","title":"var activity: String","type":"property"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/distances-swift.struct\/distance","title":"var distance: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/distances-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/distances-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/distances-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/distances-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/fitnessactivitysummary\/distances-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/fitnessactivitysummary\/distances-swift.struct","title":"FitnessActivitySummary.Distances","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/init(identifier:entityid:accountentityid:steps:distances:calories:activity:createddate:startdate:enddate:)","title":"init(identifier: String?, entityId: String?, accountEntityId: String?, steps: Double, distances: [Distances], calories: Double, activity: Int, createdDate: Date?, startDate: Date, endDate: Date)","type":"init"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/init(startdate:enddate:steps:distances:calories:activity:account:)","title":"init(startDate: Date, endDate: Date, steps: Double, distances: [Distances], calories: Double, activity: Int, account: SourceAccount?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/accountentityid","title":"var accountEntityId: String?","type":"property"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/activity","title":"var activity: Int","type":"property"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/calories","title":"var calories: Double","type":"property"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/createddate","title":"var createdDate: Date?","type":"property"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/distances-swift.property","title":"var distances: [Distances]","type":"property"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/enddate","title":"var endDate: Date","type":"property"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/entityid","title":"var entityId: String?","type":"property"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/startdate","title":"var startDate: Date","type":"property"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/steps","title":"var steps: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/merge(with:)","title":"func merge(with: FitnessActivitySummary) -> FitnessActivitySummary","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/fitnessactivitysummary\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/fitnessactivitysummary\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/fitnessactivitysummary","title":"FitnessActivitySummary","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/gdpr\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/gdpr\/canrequestrighttobeforgotten","title":"let canRequestRightToBeForgotten: Bool?","type":"property"},{"path":"\/documentation\/digimecore\/gdpr\/description","title":"let description: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/gdpr\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/gdpr\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/gdpr\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/gdpr\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/gdpr\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/gdpr","title":"GDPR","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/limits\/init(duration:)","title":"init(duration: Duration)","type":"init"},{"path":"\/documentation\/digimecore\/limits\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/limits\/duration","title":"let duration: Duration","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/limits\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/limits\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/limits\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/limits\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/limits\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/limits","title":"Limits","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/logevent\/init(event:timestamp:distinctid:meta:)","title":"init(event: String, timestamp: Int, distinctId: String, meta: LogEventMeta)","type":"init"},{"path":"\/documentation\/digimecore\/logevent\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/logevent\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/logevent\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/logevent\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/logevent\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/logevent\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/logevent","title":"LogEvent","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/logeventagent\/init(sdk:)","title":"init(sdk: Agent)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/logeventagent\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/logeventagent\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/logeventagent\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/logeventagent\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/logeventagent\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/logeventagent","title":"LogEventAgent","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/logeventmeta\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimecore\/logeventmeta\/init(service:servicegroup:appname:code:message:)","title":"init(service: [String], servicegroup: [String], appname: String?, code: String?, message: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/logeventmeta\/appname","title":"var appname: String?","type":"property"},{"path":"\/documentation\/digimecore\/logeventmeta\/code","title":"var code: String?","type":"property"},{"path":"\/documentation\/digimecore\/logeventmeta\/message","title":"var message: String?","type":"property"},{"path":"\/documentation\/digimecore\/logeventmeta\/service","title":"let service: [String]","type":"property"},{"path":"\/documentation\/digimecore\/logeventmeta\/servicegroup","title":"let servicegroup: [String]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/logeventmeta\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/logeventmeta\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/logeventmeta\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/logeventmeta\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/logeventmeta\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/logeventmeta","title":"LogEventMeta","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/logeventpayload\/init(agent:events:)","title":"init(agent: LogEventAgent, events: [LogEvent])","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/logeventpayload\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/logeventpayload\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/logeventpayload\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/logeventpayload\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/logeventpayload\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/logeventpayload","title":"LogEventPayload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/mappedfilemetadata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimecore\/mappedfilemetadata\/init(objectcount:objecttype:servicegroup:servicename:)","title":"init(objectCount: Int, objectType: String, serviceGroup: String, serviceName: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/mappedfilemetadata\/objectcount","title":"let objectCount: Int","type":"property"},{"path":"\/documentation\/digimecore\/mappedfilemetadata\/objecttype","title":"let objectType: String","type":"property"},{"path":"\/documentation\/digimecore\/mappedfilemetadata\/servicegroup","title":"let serviceGroup: String","type":"property"},{"path":"\/documentation\/digimecore\/mappedfilemetadata\/servicename","title":"let serviceName: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/mappedfilemetadata\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/mappedfilemetadata\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/mappedfilemetadata\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/mappedfilemetadata\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/mappedfilemetadata\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/mappedfilemetadata","title":"MappedFileMetadata","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/oauth\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/oauth\/deliverymode","title":"let deliveryMode: DeliveryMode?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/oauth\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/oauth\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/oauth\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/oauth\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/oauth\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/oauth","title":"OAuth","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/oauthtoken\/token\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/oauthtoken\/token\/isvalid","title":"var isValid: Bool","type":"property"},{"path":"\/documentation\/digimecore\/oauthtoken\/token\/value","title":"let value: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/oauthtoken\/token\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/oauthtoken\/token\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/oauthtoken\/token\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/oauthtoken\/token\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/oauthtoken\/token\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/oauthtoken\/token","title":"OAuthToken.Token","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/oauthtoken\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/oauthtoken\/accesstoken","title":"let accessToken: Token","type":"property"},{"path":"\/documentation\/digimecore\/oauthtoken\/refreshtoken","title":"let refreshToken: Token","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/oauthtoken\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/oauthtoken\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/oauthtoken\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/oauthtoken\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/oauthtoken\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/oauthtoken","title":"OAuthToken","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/partner\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/partner\/environment","title":"let environment: Int?","type":"property"},{"path":"\/documentation\/digimecore\/partner\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/digimecore\/partner\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/digimecore\/partner\/resources","title":"let resources: Resources?","type":"property"},{"path":"\/documentation\/digimecore\/partner\/revision","title":"let revision: Int?","type":"property"},{"path":"\/documentation\/digimecore\/partner\/schemaversion","title":"let schemaVersion: String?","type":"property"},{"path":"\/documentation\/digimecore\/partner\/visibility","title":"let visibility: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/partner\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/partner\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/partner\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/partner\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/partner\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/partner","title":"Partner","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/policies\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/policies\/currentstate","title":"let currentState: [String : String]?","type":"property"},{"path":"\/documentation\/digimecore\/policies\/properties","title":"let properties: [String : String]?","type":"property"},{"path":"\/documentation\/digimecore\/policies\/scope","title":"let scope: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/policies\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/policies\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/policies\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/policies\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/policies\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/policies","title":"Policies","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/account\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/account\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/account\/accountid","title":"let accountId: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/account\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/account\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/account\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/account\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/rawfilemetadata\/account\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/account\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/digimecore\/rawfilemetadata\/account\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/account\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/digimecore\/rawfilemetadata\/account\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/rawfilemetadata\/account","title":"RawFileMetadata.Account","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/objecttype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/objecttype\/init(name:references:)","title":"init(name: String, references: [String]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/objecttype\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/objecttype\/references","title":"let references: [String]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/objecttype\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/objecttype\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/objecttype\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/objecttype\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/rawfilemetadata\/objecttype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/rawfilemetadata\/objecttype","title":"RawFileMetadata.ObjectType","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/init(builder:)","title":"init(builder: RawFileMetadataBuilder)","type":"init"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/accounts","title":"let accounts: [Account]","type":"property"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/appid","title":"let appId: String?","type":"property"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/contractid","title":"let contractId: String?","type":"property"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/created","title":"let created: Double?","type":"property"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/mimetype","title":"let mimeType: MimeType","type":"property"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/objecttypes","title":"let objectTypes: [ObjectType]?","type":"property"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/partnerid","title":"let partnerId: String?","type":"property"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/reference","title":"let reference: [String]?","type":"property"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/servicegroups","title":"let serviceGroups: [Int]?","type":"property"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/tags","title":"let tags: [String]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/rawfilemetadata\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/rawfilemetadata\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/rawfilemetadata","title":"RawFileMetadata","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/readoptions\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimecore\/readoptions\/init(limits:scope:)","title":"init?(limits: Limits?, scope: Scope?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/readoptions\/limits","title":"let limits: Limits?","type":"property"},{"path":"\/documentation\/digimecore\/readoptions\/scope","title":"let scope: Scope?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/readoptions\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/readoptions\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/readoptions\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/readoptions\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/readoptions\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/readoptions","title":"ReadOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/resources\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/resources\/homepage","title":"let homePage: String?","type":"property"},{"path":"\/documentation\/digimecore\/resources\/logo","title":"let logo: String?","type":"property"},{"path":"\/documentation\/digimecore\/resources\/privacypolicy","title":"let privacyPolicy: String?","type":"property"},{"path":"\/documentation\/digimecore\/resources\/terms","title":"let terms: String?","type":"property"},{"path":"\/documentation\/digimecore\/resources\/termsandconditions","title":"let termsAndConditions: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/resources\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/resources\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/resources\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/resources\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/resources\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/resources","title":"Resources","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sampledataset\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sampledataset\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/digimecore\/sampledataset\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sampledataset\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/sampledataset\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sampledataset\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/sampledataset\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/sampledataset\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sampledataset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/sampledataset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/sampledataset","title":"SampleDataset","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/scope\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimecore\/scope\/init(servicegroups:timeranges:)","title":"init(serviceGroups: [ServiceGroupType], timeRanges: [TimeRange]?)","type":"init"},{"path":"\/documentation\/digimecore\/scope\/init(timeranges:)","title":"init(timeRanges: [TimeRange])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/scope\/servicegroups","title":"let serviceGroups: [ServiceGroupType]?","type":"property"},{"path":"\/documentation\/digimecore\/scope\/timeranges","title":"let timeRanges: [TimeRange]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/scope\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/scope\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/scope\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/scope\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/scope\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/scope","title":"Scope","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/service\/identifierreference\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/service\/identifierreference\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/service\/identifierreference\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/service\/identifierreference\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/service\/identifierreference\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/service\/identifierreference\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/service\/identifierreference","title":"Service.IdentifierReference","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/service\/platform\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/service\/platform\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/service\/platform\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/service\/platform\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/service\/platform\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/service\/platform\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/service\/platform","title":"Service.Platform","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/service\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimecore\/service\/init(identifier:serviceidentifier:name:options:resources:countries:servicegroups:publishedstatus:platform:)","title":"init(identifier: Int, serviceIdentifier: Int, name: String, options: ReadOptions?, resources: [DiscoveryResource], countries: [IdentifierReference], serviceGroups: [IdentifierReference], publishedStatus: String, platform: Platform)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/service\/countryids","title":"var countryIds: [Int]","type":"property"},{"path":"\/documentation\/digimecore\/service\/id","title":"let id: UUID","type":"property"},{"path":"\/documentation\/digimecore\/service\/identifier","title":"let identifier: Int","type":"property"},{"path":"\/documentation\/digimecore\/service\/isavailable","title":"var isAvailable: Bool","type":"property"},{"path":"\/documentation\/digimecore\/service\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/digimecore\/service\/options","title":"var options: ReadOptions?","type":"property"},{"path":"\/documentation\/digimecore\/service\/resources","title":"var resources: [DiscoveryResource]","type":"property"},{"path":"\/documentation\/digimecore\/service\/sampledataonly","title":"var sampleDataOnly: Bool","type":"property"},{"path":"\/documentation\/digimecore\/service\/servicegroupids","title":"var serviceGroupIds: [Int]","type":"property"},{"path":"\/documentation\/digimecore\/service\/serviceidentifier","title":"let serviceIdentifier: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/service\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/service\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/service\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/service\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/service\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/service\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/digimecore\/service\/==(_:_:)","title":"static func == (Service, Service) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/service\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/service","title":"Service","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicecountry\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicecountry\/code","title":"let code: String","type":"property"},{"path":"\/documentation\/digimecore\/servicecountry\/identifier","title":"let identifier: Int","type":"property"},{"path":"\/documentation\/digimecore\/servicecountry\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicecountry\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/servicecountry\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicecountry\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/servicecountry\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/servicecountry\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/servicecountry","title":"ServiceCountry","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/serviceerror\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/serviceerror\/message","title":"let message: String","type":"property"},{"path":"\/documentation\/digimecore\/serviceerror\/reauth","title":"let reauth: Bool?","type":"property"},{"path":"\/documentation\/digimecore\/serviceerror\/retryafter","title":"let retryAfter: Date?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/serviceerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/serviceerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/serviceerror","title":"ServiceError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicegroup\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicegroup\/identifier","title":"let identifier: Int","type":"property"},{"path":"\/documentation\/digimecore\/servicegroup\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicegroup\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/servicegroup\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicegroup\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/servicegroup\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/servicegroup\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/servicegroup","title":"ServiceGroup","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicegroupcodable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicegroupcodable\/id","title":"let id: Int?","type":"property"},{"path":"\/documentation\/digimecore\/servicegroupcodable\/servicetypes","title":"let serviceTypes: [ServiceTypeCodable]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicegroupcodable\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/servicegroupcodable\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicegroupcodable\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/servicegroupcodable\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/servicegroupcodable\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/servicegroupcodable","title":"ServiceGroupCodable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicegrouptype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimecore\/servicegrouptype\/init(identifier:servicetypes:name:)","title":"init(identifier: Int, serviceTypes: [ServiceType], name: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicegrouptype\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/digimecore\/servicegrouptype\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/digimecore\/servicegrouptype\/servicetypes","title":"let serviceTypes: [ServiceType]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicegrouptype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicegrouptype\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/servicegrouptype\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicegrouptype\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/servicegrouptype\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/servicegrouptype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/servicegrouptype","title":"ServiceGroupType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/serviceobjecttype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimecore\/serviceobjecttype\/init(identifier:name:)","title":"init(identifier: Int, name: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/serviceobjecttype\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/digimecore\/serviceobjecttype\/name","title":"let name: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/serviceobjecttype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/serviceobjecttype\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/serviceobjecttype\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/serviceobjecttype\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/serviceobjecttype\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/serviceobjecttype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/serviceobjecttype","title":"ServiceObjectType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/serviceobjecttypecodable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/serviceobjecttypecodable\/id","title":"let id: Int?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/serviceobjecttypecodable\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/serviceobjecttypecodable\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/serviceobjecttypecodable\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/serviceobjecttypecodable\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/serviceobjecttypecodable\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/serviceobjecttypecodable","title":"ServiceObjectTypeCodable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicetype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimecore\/servicetype\/init(identifier:objecttypes:name:)","title":"init(identifier: Int, objectTypes: [ServiceObjectType], name: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicetype\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/digimecore\/servicetype\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/digimecore\/servicetype\/serviceobjecttypes","title":"let serviceObjectTypes: [ServiceObjectType]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicetype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicetype\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/servicetype\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicetype\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/servicetype\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/servicetype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/servicetype","title":"ServiceType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicetypecodable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicetypecodable\/id","title":"let id: Int?","type":"property"},{"path":"\/documentation\/digimecore\/servicetypecodable\/serviceobjecttypes","title":"let serviceObjectTypes: [ServiceObjectTypeCodable]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicetypecodable\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/servicetypecodable\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicetypecodable\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/servicetypecodable\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/servicetypecodable\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/servicetypecodable","title":"ServiceTypeCodable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicesinfo\/init(countries:servicegroups:services:)","title":"init(countries: [ServiceCountry], serviceGroups: [ServiceGroup], services: [Service])","type":"init"},{"path":"\/documentation\/digimecore\/servicesinfo\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicesinfo\/countries","title":"let countries: [ServiceCountry]","type":"property"},{"path":"\/documentation\/digimecore\/servicesinfo\/servicegroups","title":"let serviceGroups: [ServiceGroup]","type":"property"},{"path":"\/documentation\/digimecore\/servicesinfo\/services","title":"let services: [Service]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicesinfo\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/servicesinfo\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/servicesinfo\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/servicesinfo\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/servicesinfo\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/servicesinfo","title":"ServicesInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sourceaccount\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimecore\/sourceaccount\/init(identifier:name:service:number:)","title":"init(identifier: String, name: String, service: AccountServiceDescriptor, number: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sourceaccount\/id","title":"let id: UUID","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccount\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccount\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccount\/number","title":"let number: String?","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccount\/service","title":"let service: AccountServiceDescriptor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sourceaccount\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccount\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sourceaccount\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/sourceaccount\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/sourceaccount\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/sourceaccount","title":"SourceAccount","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/accesstokenstatus-swift.struct\/init(authorized:expiresat:)","title":"init(authorized: Bool, expiresAt: Double?)","type":"init"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/accesstokenstatus-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/accesstokenstatus-swift.struct\/authorized","title":"let authorized: Bool","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/accesstokenstatus-swift.struct\/expiresat","title":"let expiresAt: Double?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/accesstokenstatus-swift.struct\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/accesstokenstatus-swift.struct\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/accesstokenstatus-swift.struct\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/accesstokenstatus-swift.struct\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/sourceaccountdata\/accesstokenstatus-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/sourceaccountdata\/accesstokenstatus-swift.struct","title":"SourceAccountData.AccessTokenStatus","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/init(identifier:id:reference:type:createddate:servicegroupid:servicegroupname:servicetypeid:servicetypename:servicetypereference:sourceid:updateddate:accesstokenstatus:providerfavicon:providerlogo:serviceproviderid:serviceprovidername:servi-8l682","title":"init(identifier: UUID, id: String, reference: String, type: AccountType, createdDate: Double, serviceGroupId: Int, serviceGroupName: String, serviceTypeId: Int, serviceTypeName: String, serviceTypeReference: String, sourceId: Int, updatedDate: Double, accessTokenStatus: AccessTokenStatus?, providerFavIcon: String?, providerLogo: String?, serviceProviderId: Int?, serviceProviderName: String?, serviceProviderReference: String?, username: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/accesstokenstatus-swift.property","title":"let accessTokenStatus: AccessTokenStatus?","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/createddate","title":"let createdDate: Double","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/identifier","title":"var identifier: UUID","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/providerfavicon","title":"let providerFavIcon: String?","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/providerlogo","title":"let providerLogo: String?","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/reference","title":"let reference: String","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/servicegroupid","title":"let serviceGroupId: Int","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/servicegroupname","title":"let serviceGroupName: String","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/serviceproviderid","title":"let serviceProviderId: Int?","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/serviceprovidername","title":"let serviceProviderName: String?","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/serviceproviderreference","title":"let serviceProviderReference: String?","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/servicetypeid","title":"let serviceTypeId: Int","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/servicetypename","title":"let serviceTypeName: String","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/servicetypereference","title":"let serviceTypeReference: String","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/sourceid","title":"let sourceId: Int","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/type","title":"let type: AccountType","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/updateddate","title":"let updatedDate: Double","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/username","title":"let username: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/getaccountid()","title":"func getAccountId() -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/sourceaccountdata\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/sourceaccountdata\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/sourceaccountdata","title":"SourceAccountData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/syncaccount\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/syncaccount\/error","title":"let error: SyncError?","type":"property"},{"path":"\/documentation\/digimecore\/syncaccount\/identifier","title":"let identifier: String?","type":"property"},{"path":"\/documentation\/digimecore\/syncaccount\/state","title":"let state: SyncState","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/syncaccount\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/syncaccount\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/syncaccount","title":"SyncAccount","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/syncerror\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/syncerror\/code","title":"let code: String","type":"property"},{"path":"\/documentation\/digimecore\/syncerror\/error","title":"let error: ServiceError?","type":"property"},{"path":"\/documentation\/digimecore\/syncerror\/statuscode","title":"let statusCode: Int?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/syncerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/syncerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/syncerror","title":"SyncError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/syncstatus\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/syncstatus\/details","title":"let details: [SyncAccount]?","type":"property"},{"path":"\/documentation\/digimecore\/syncstatus\/state","title":"let state: SyncState","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/syncstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/syncstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/syncstatus","title":"SyncStatus","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerangecodable\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerangecodable\/from","title":"let from: Double?","type":"property"},{"path":"\/documentation\/digimecore\/timerangecodable\/last","title":"let last: String?","type":"property"},{"path":"\/documentation\/digimecore\/timerangecodable\/to","title":"let to: Double?","type":"property"},{"path":"\/documentation\/digimecore\/timerangecodable\/type","title":"let type: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerangecodable\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/timerangecodable\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerangecodable\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/timerangecodable\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/timerangecodable\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/timerangecodable","title":"TimeRangeCodable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerangelimits\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerangelimits\/enddate","title":"let endDate: Date","type":"property"},{"path":"\/documentation\/digimecore\/timerangelimits\/startdate","title":"let startDate: Date","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerangelimits\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/timerangelimits\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerangelimits\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/timerangelimits\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/timerangelimits\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/timerangelimits","title":"TimeRangeLimits","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/userdefault\/init(key:defaultvalue:userdefaults:persistdefaultvalue:)","title":"init<U>(key: U, defaultValue: T, userDefaults: UserDefaults, persistDefaultValue: Bool)","type":"init"},{"path":"\/documentation\/digimecore\/userdefault\/init(key:userdefaults:)-3iaxu","title":"init<U>(key: U, userDefaults: UserDefaults)","type":"init"},{"path":"\/documentation\/digimecore\/userdefault\/init(key:userdefaults:)-8vya4","title":"init(key: String, userDefaults: UserDefaults)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/userdefault\/wrappedvalue","title":"var wrappedValue: T","type":"property"}],"path":"\/documentation\/digimecore\/userdefault","title":"UserDefault","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/writeaccessinfo\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/digimecore\/writeaccessinfo\/init(postboxid:publickey:)","title":"init(postboxId: String, publicKey: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/writeaccessinfo\/postboxid","title":"let postboxId: String","type":"property"},{"path":"\/documentation\/digimecore\/writeaccessinfo\/publickey","title":"let publicKey: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/writeaccessinfo\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/writeaccessinfo\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/writeaccessinfo\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/writeaccessinfo\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/writeaccessinfo\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/writeaccessinfo","title":"WriteAccessInfo","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/digimecore\/loghandler","title":"LogHandler","type":"typealias"},{"path":"\/documentation\/digimecore\/loglevelmask","title":"LogLevelMask","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimecore\/accounttype\/admin","title":"case admin","type":"case"},{"path":"\/documentation\/digimecore\/accounttype\/bank","title":"case bank","type":"case"},{"path":"\/documentation\/digimecore\/accounttype\/bill","title":"case bill","type":"case"},{"path":"\/documentation\/digimecore\/accounttype\/creditcard","title":"case creditCard","type":"case"},{"path":"\/documentation\/digimecore\/accounttype\/event","title":"case event","type":"case"},{"path":"\/documentation\/digimecore\/accounttype\/group","title":"case group","type":"case"},{"path":"\/documentation\/digimecore\/accounttype\/imported","title":"case imported","type":"case"},{"path":"\/documentation\/digimecore\/accounttype\/insurance","title":"case insurance","type":"case"},{"path":"\/documentation\/digimecore\/accounttype\/investment","title":"case investment","type":"case"},{"path":"\/documentation\/digimecore\/accounttype\/loan","title":"case loan","type":"case"},{"path":"\/documentation\/digimecore\/accounttype\/push","title":"case push","type":"case"},{"path":"\/documentation\/digimecore\/accounttype\/reward","title":"case reward","type":"case"},{"path":"\/documentation\/digimecore\/accounttype\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/accounttype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/accounttype\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/accounttype\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/accounttype\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/accounttype\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/accounttype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/accounttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/accounttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/accounttype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/accounttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/accounttype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/digimecore\/accounttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimecore\/accounttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/accounttype","title":"AccountType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimecore\/callbackerror\/invalidcallbackparameters","title":"case invalidCallbackParameters","type":"case"},{"path":"\/documentation\/digimecore\/callbackerror\/unexpectedcallbackaction","title":"case unexpectedCallbackAction","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/callbackerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/callbackerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/callbackerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/digimecore\/callbackerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/callbackerror","title":"CallbackError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimecore\/consenterror\/initializecheckfailed","title":"case initializeCheckFailed","type":"case"},{"path":"\/documentation\/digimecore\/consenterror\/invalidcode","title":"case invalidCode","type":"case"},{"path":"\/documentation\/digimecore\/consenterror\/servererror","title":"case serverError","type":"case"},{"path":"\/documentation\/digimecore\/consenterror\/serviceonboarderror","title":"case serviceOnboardError","type":"case"},{"path":"\/documentation\/digimecore\/consenterror\/unexpectederror","title":"case unexpectedError","type":"case"},{"path":"\/documentation\/digimecore\/consenterror\/usercancelled","title":"case userCancelled","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/consenterror\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/consenterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/consenterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/consenterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/digimecore\/consenterror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/consenterror\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/consenterror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimecore\/consenterror\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/consenterror","title":"ConsentError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contracttimerangetype\/alltime","title":"case allTime","type":"case"},{"path":"\/documentation\/digimecore\/contracttimerangetype\/rolling","title":"case rolling","type":"case"},{"path":"\/documentation\/digimecore\/contracttimerangetype\/since","title":"case since","type":"case"},{"path":"\/documentation\/digimecore\/contracttimerangetype\/until","title":"case until","type":"case"},{"path":"\/documentation\/digimecore\/contracttimerangetype\/window","title":"case window","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contracttimerangetype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contracttimerangetype\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/contracttimerangetype\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contracttimerangetype\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/contracttimerangetype\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/contracttimerangetype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contracttimerangetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/contracttimerangetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contracttimerangetype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contracttimerangetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/contracttimerangetype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/digimecore\/contracttimerangetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimecore\/contracttimerangetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/contracttimerangetype","title":"ContractTimeRangeType","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/crypto\/base64encodeddata(from:)","title":"static func base64EncodedData(from: String) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/crypto\/decrypt(encryptedbase64encodeddata:privatekeydata:dataishashed:)","title":"static func decrypt(encryptedBase64EncodedData: Data, privateKeyData: Data, dataIsHashed: Bool) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/crypto\/decryptrsa(data:privatekey:)","title":"static func decryptRSA(data: Data, privateKey: String) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/crypto\/decryptrsa(data:privatekeydata:)","title":"static func decryptRSA(data: Data, privateKeyData: Data) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/crypto\/encrypt(symmetrickey:publickey:)","title":"static func encrypt(symmetricKey: Data, publicKey: String) throws -> String","type":"method"},{"path":"\/documentation\/digimecore\/crypto\/encryptrsa(data:publickey:)","title":"static func encryptRSA(data: Data, publicKey: String) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/crypto\/encryptrsa(data:publickeydata:)","title":"static func encryptRSA(data: Data, publicKeyData: Data) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/crypto\/md5hash(from:)","title":"static func md5Hash(from: String) -> String","type":"method"},{"path":"\/documentation\/digimecore\/crypto\/seckey(keydata:ispublic:)","title":"static func secKey(keyData: Data, isPublic: Bool) throws -> SecKey","type":"method"},{"path":"\/documentation\/digimecore\/crypto\/securerandombytes(length:)","title":"static func secureRandomBytes(length: Int) -> [UInt8]","type":"method"},{"path":"\/documentation\/digimecore\/crypto\/securerandomdata(length:)","title":"static func secureRandomData(length: Int) -> Data","type":"method"},{"path":"\/documentation\/digimecore\/crypto\/sha256hash(from:)","title":"static func sha256Hash(from: String) -> Data","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimecore\/crypto\/cryptoerror\/chunkdecryptfailed(index:)","title":"case chunkDecryptFailed(index: Int)","type":"case"},{"path":"\/documentation\/digimecore\/crypto\/cryptoerror\/chunkencryptfailed(index:)","title":"case chunkEncryptFailed(index: Int)","type":"case"},{"path":"\/documentation\/digimecore\/crypto\/cryptoerror\/corruptdata","title":"case corruptData","type":"case"},{"path":"\/documentation\/digimecore\/crypto\/cryptoerror\/dskdecryptfailed(status:)","title":"case dskDecryptFailed(status: OSStatus)","type":"case"},{"path":"\/documentation\/digimecore\/crypto\/cryptoerror\/seckeycreatefailed(error:)","title":"case secKeyCreateFailed(error: CFError)","type":"case"},{"path":"\/documentation\/digimecore\/crypto\/cryptoerror\/stringtodataconversionfailed","title":"case stringToDataConversionFailed","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/crypto\/cryptoerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/digimecore\/crypto\/cryptoerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/crypto\/cryptoerror","title":"Crypto.CryptoError","type":"enum"}],"path":"\/documentation\/digimecore\/crypto","title":"Crypto","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimecore\/deviceonlyservices\/applehealth","title":"case appleHealth","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/deviceonlyservices\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/deviceonlyservices\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/deviceonlyservices\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/deviceonlyservices\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/deviceonlyservices\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimecore\/deviceonlyservices\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/deviceonlyservices","title":"DeviceOnlyServices","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimecore\/filemetadata\/mapped(_:)","title":"case mapped(MappedFileMetadata)","type":"case"},{"path":"\/documentation\/digimecore\/filemetadata\/none","title":"case none","type":"case"},{"path":"\/documentation\/digimecore\/filemetadata\/raw(_:)","title":"case raw(RawFileMetadata)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/filemetadata\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/digimecore\/filemetadata\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/filemetadata\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/filemetadata\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/filemetadata\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/digimecore\/filemetadata\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/filemetadata\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/filemetadata\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/filemetadata\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/filemetadata\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/filemetadata\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/digimecore\/filemetadata\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/filemetadata\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/filemetadata\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/filemetadata","title":"FileMetadata","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimecore\/loglevel\/critical","title":"case critical","type":"case"},{"path":"\/documentation\/digimecore\/loglevel\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/digimecore\/loglevel\/error","title":"case error","type":"case"},{"path":"\/documentation\/digimecore\/loglevel\/info","title":"case info","type":"case"},{"path":"\/documentation\/digimecore\/loglevel\/mixpanel","title":"case mixpanel","type":"case"},{"path":"\/documentation\/digimecore\/loglevel\/warning","title":"case warning","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/loglevel\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/loglevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/loglevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/loglevel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/loglevel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimecore\/loglevel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/loglevel","title":"LogLevel","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimecore\/mimetype\/applicationjson","title":"case applicationJson","type":"case"},{"path":"\/documentation\/digimecore\/mimetype\/applicationoctetstream","title":"case applicationOctetStream","type":"case"},{"path":"\/documentation\/digimecore\/mimetype\/applicationpdf","title":"case applicationPdf","type":"case"},{"path":"\/documentation\/digimecore\/mimetype\/imagebmp","title":"case imageBmp","type":"case"},{"path":"\/documentation\/digimecore\/mimetype\/imagegif","title":"case imageGif","type":"case"},{"path":"\/documentation\/digimecore\/mimetype\/imagejpeg","title":"case imageJpeg","type":"case"},{"path":"\/documentation\/digimecore\/mimetype\/imagepng","title":"case imagePng","type":"case"},{"path":"\/documentation\/digimecore\/mimetype\/imagetiff","title":"case imageTiff","type":"case"},{"path":"\/documentation\/digimecore\/mimetype\/textjson","title":"case textJson","type":"case"},{"path":"\/documentation\/digimecore\/mimetype\/textplain","title":"case textPlain","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/mimetype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/mimetype\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/mimetype\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/mimetype\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/mimetype\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/mimetype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/mimetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/mimetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/mimetype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/mimetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/mimetype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/digimecore\/mimetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimecore\/mimetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/mimetype","title":"MimeType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sdkerror\/addingservicefailed","title":"case addingServiceFailed","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/alreadyreadingallfiles","title":"case alreadyReadingAllFiles","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/authorizationcancelled","title":"case authorizationCancelled","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/authorizationfailed(code:)","title":"case authorizationFailed(code: String)","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/authorizationrequired","title":"case authorizationRequired","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/badencoding(message:)","title":"case badEncoding(message: String)","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/certificateencodingdataerror","title":"case certificateEncodingDataError","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/certificateformatisnotsupported","title":"case certificateFormatIsNotSupported","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/certificateparsererror(error:)","title":"case certificateParserError(error: Error)","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/certificateparserinvaliddata","title":"case certificateParserInvalidData","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/certificatetypeisnotsupported","title":"case certificateTypeIsNotSupported","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/certificateverifytimerangeerror","title":"case certificateVerifyTimeRangeError","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/errorcreatingdatarequestjwt","title":"case errorCreatingDataRequestJwt","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/errorcreatingrequestjwttoexportreport","title":"case errorCreatingRequestJwtToExportReport","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/errorcreatingrequestjwttotriggerdata","title":"case errorCreatingRequestJwtToTriggerData","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/errordecodedingjwtpreauthcode","title":"case errorDecodedingJwtPreAuthCode","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/errordecryptingresponse","title":"case errorDecryptingResponse","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/errorextractingreferencecodefromjwt","title":"case errorExtractingReferenceCodeFromJwt","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/errorextractingtokensfromjwt","title":"case errorExtractingTokensFromJwt","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/errormakingrequest","title":"case errorMakingRequest","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/errormakingrequestnoresponse","title":"case errorMakingRequestNoResponse","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/errormakingrequestwhenparsingresponse","title":"case errorMakingRequestWhenParsingResponse","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/errorparsingheadersmetadataintheresponse","title":"case errorParsingHeadersMetadataInTheResponse","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/filedownloadoperationerror(error:)","title":"case fileDownloadOperationError(error: Error)","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/filelistpollingtimeout","title":"case fileListPollingTimeout","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/healthdataerror(message:)","title":"case healthDataError(message: String)","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/healthdataerrorerror(error:)","title":"case healthDataErrorError(error: Error)","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/healthdatafetchstatistics(error:)","title":"case healthDataFetchStatistics(error: Error)","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/healthdataisnotavailable","title":"case healthDataIsNotAvailable","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/healthdatanotsupportshealthrecords","title":"case healthDataNotSupportsHealthRecords","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/healthdataunabletocreatequantitytype","title":"case healthDataUnableToCreateQuantityType","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/healthdataunabletouploadlogevent","title":"case healthDataUnableToUploadLogEvent","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/httpresponseerror(statuscode:apierror:)","title":"case httpResponseError(statusCode: Int, apiError: APIError?)","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/incorrectcontracttype","title":"case incorrectContractType","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/invalidaccountreferencerequestjwt","title":"case invalidAccountReferenceRequestJwt","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/invalidappid","title":"case invalidAppId","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/invalidauthorizationrequestjwt","title":"case invalidAuthorizationRequestJwt","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/invaliddata","title":"case invalidData","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/invaliddeleteusertokenrequestjwt","title":"case invalidDeleteUserTokenRequestJwt","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/invalididentifier(message:)","title":"case invalidIdentifier(message: String)","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/invalidpreauthorizationrequestjwt","title":"case invalidPreAuthorizationRequestJwt","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/invalidprivateorpublickey","title":"case invalidPrivateOrPublicKey","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/invalidreferencetokenrequestjwt","title":"case invalidReferenceTokenRequestJwt","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/invalidrefreshtokensrequestjwt","title":"case invalidRefreshTokensRequestJwt","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/invalidsdkversion","title":"case invalidSdkVersion","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/invalidsession","title":"case invalidSession","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/invalidtype(message:)","title":"case invalidType(message: String)","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/invalidvalue(message:)","title":"case invalidValue(message: String)","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/invalidwritemetadata","title":"case invalidWriteMetadata","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/linkedcontractnotauthorized","title":"case linkedContractNotAuthorized","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/nourlscheme","title":"case noUrlScheme","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/notavailable(message:)","title":"case notAvailable(message: String)","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/other","title":"case other","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/parsingfailed(message:)","title":"case parsingFailed(message: String)","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/readaccountserror","title":"case readAccountsError","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/scopeoutofbounds","title":"case scopeOutOfBounds","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/unexpectederrorwhenparsingconsentresponse","title":"case unexpectedErrorWhenParsingConsentResponse","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/unknown(message:)","title":"case unknown(message: String)","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/urlrequestfailed(error:)","title":"case urlRequestFailed(error: Error)","type":"case"},{"path":"\/documentation\/digimecore\/sdkerror\/writerequestfailure","title":"case writeRequestFailure","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sdkerror\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/digimecore\/sdkerror\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/sdkerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/digimecore\/sdkerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/sdkerror","title":"SDKError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimecore\/syncstate\/completed","title":"case completed","type":"case"},{"path":"\/documentation\/digimecore\/syncstate\/partial","title":"case partial","type":"case"},{"path":"\/documentation\/digimecore\/syncstate\/pending","title":"case pending","type":"case"},{"path":"\/documentation\/digimecore\/syncstate\/running","title":"case running","type":"case"},{"path":"\/documentation\/digimecore\/syncstate\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/syncstate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/syncstate\/isrunning","title":"var isRunning: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/syncstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/syncstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/syncstate\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/syncstate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/syncstate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimecore\/syncstate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/syncstate","title":"SyncState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerange\/after(from:)","title":"case after(from: Date)","type":"case"},{"path":"\/documentation\/digimecore\/timerange\/before(to:)","title":"case before(to: Date)","type":"case"},{"path":"\/documentation\/digimecore\/timerange\/between(from:to:)","title":"case between(from: Date, to: Date)","type":"case"},{"path":"\/documentation\/digimecore\/timerange\/last(amount:unit:)","title":"case last(amount: Int, unit: Unit)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerange\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerange\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerange\/unit\/day","title":"case day","type":"case"},{"path":"\/documentation\/digimecore\/timerange\/unit\/month","title":"case month","type":"case"},{"path":"\/documentation\/digimecore\/timerange\/unit\/year","title":"case year","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerange\/unit\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerange\/unit\/calendarunit","title":"var calendarUnit: Calendar.Component","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerange\/unit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/timerange\/unit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerange\/unit\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerange\/unit\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/digimecore\/timerange\/unit\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/timerange\/unit","title":"TimeRange.Unit","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerange\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/timerange\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/timerange\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/timerange\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/timerange\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/timerange","title":"TimeRange","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/foundation\/calendar\/utccalendar","title":"static var utcCalendar: Calendar","type":"property"}],"path":"\/documentation\/digimecore\/foundation\/calendar","title":"Calendar","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/foundation\/data\/decoded(datedecodingstrategy:)","title":"func decoded<T>(dateDecodingStrategy: JSONDecoder.DateDecodingStrategy?) throws -> T","type":"method"}],"path":"\/documentation\/digimecore\/foundation\/data","title":"Data","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/digimecore\/foundation\/date\/init(milliseconds:)","title":"init(milliseconds: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/foundation\/date\/endofday","title":"var endOfDay: Date","type":"property"},{"path":"\/documentation\/digimecore\/foundation\/date\/endofmonth","title":"var endOfMonth: Date","type":"property"},{"path":"\/documentation\/digimecore\/foundation\/date\/endoftoday","title":"var endOfToday: Date","type":"property"},{"path":"\/documentation\/digimecore\/foundation\/date\/endoftomorrow","title":"var endOfTomorrow: Date","type":"property"},{"path":"\/documentation\/digimecore\/foundation\/date\/millisecondssince1970","title":"var millisecondsSince1970: Double","type":"property"},{"path":"\/documentation\/digimecore\/foundation\/date\/startofday","title":"var startOfDay: Date","type":"property"},{"path":"\/documentation\/digimecore\/foundation\/date\/startofmonth","title":"var startOfMonth: Date","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/foundation\/date\/isbetween(_:and:)","title":"func isBetween(Date, and: Date) -> Bool","type":"method"},{"path":"\/documentation\/digimecore\/foundation\/date\/nextweekofyear(using:)","title":"func nextWeekOfYear(using: Calendar) -> Int","type":"method"},{"path":"\/documentation\/digimecore\/foundation\/date\/startofnextweek(using:)","title":"func startOfNextWeek(using: Calendar) -> Date","type":"method"},{"path":"\/documentation\/digimecore\/foundation\/date\/yearforweekofyear(using:)","title":"func yearForWeekOfYear(using: Calendar) -> Int","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/foundation\/date\/from(year:month:day:hour:minute:second:)","title":"static func from(year: Int, month: Int, day: Int, hour: Int, minute: Int, second: Int) -> Date?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/foundation\/date\/_(_:_:)","title":"static func < (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/foundation\/date\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/digimecore\/foundation\/date\/==(_:_:)","title":"static func == (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/digimecore\/foundation\/date\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/foundation\/date\/advanced(by:)","title":"func advanced(by: TimeInterval) -> Date","type":"method"},{"path":"\/documentation\/digimecore\/foundation\/date\/distance(to:)","title":"func distance(to: Date) -> TimeInterval","type":"method"}],"path":"\/documentation\/digimecore\/foundation\/date\/strideable-implementations","title":"Strideable Implementations","type":"symbol"}],"path":"\/documentation\/digimecore\/foundation\/date","title":"Date","type":"extension"}],"path":"\/documentation\/digimecore\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/digimecore\/swift\/encodable\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/digimecore\/swift\/encodable\/dictionary","title":"var dictionary: Any?","type":"property"},{"path":"\/documentation\/digimecore\/swift\/encodable\/json","title":"var json: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/swift\/encodable\/encoded(dateencodingstrategy:keyencodingstrategy:outputformatting:)","title":"func encoded(dateEncodingStrategy: JSONEncoder.DateEncodingStrategy?, keyEncodingStrategy: JSONEncoder.KeyEncodingStrategy?, outputFormatting: JSONEncoder.OutputFormatting?) throws -> Data","type":"method"},{"path":"\/documentation\/digimecore\/swift\/encodable\/encodedtostring()","title":"func encodedToString() throws -> String","type":"method"}],"path":"\/documentation\/digimecore\/swift\/encodable","title":"Encodable","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/swift\/array\/chunked(into:)","title":"func chunked(into: Int) -> [[Element]]","type":"method"},{"path":"\/documentation\/digimecore\/swift\/array\/decoded()","title":"func decoded<T>() throws -> T","type":"method"},{"path":"\/documentation\/digimecore\/swift\/array\/groupedby(datecomponents:shiftdatetomiddle:)","title":"func groupedBy(dateComponents: Set<Calendar.Component>, shiftDateToMiddle: Bool) -> [Date : [Element]]","type":"method"},{"path":"\/documentation\/digimecore\/swift\/array\/remove(object:)","title":"func remove(object: Element)","type":"method"}],"path":"\/documentation\/digimecore\/swift\/array","title":"Array","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/swift\/dictionary\/decoded()","title":"func decoded<T>() throws -> T","type":"method"}],"path":"\/documentation\/digimecore\/swift\/dictionary","title":"Dictionary","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/digimecore\/swift\/string\/random(length:)","title":"static func random(length: Int) -> String","type":"method"}],"path":"\/documentation\/digimecore\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/digimecore\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/digimecore","title":"DigiMeCore","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}